<Window x:Class="WpfApplication.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication"
        mc:Ignorable="d"
        Title="MainWindow" Height="720" Width="600"
        >
    <Window.Resources>
        <!--
        <SolidColorBrush x:Key="MyBrush" Color="LightYellow"/>
        <Style TargetType="Button">
            <Setter Property="Background" Value="LightBlue"/>
        </Style>
        -->
        <SolidColorBrush x:Key="MyBrush" Color="LightCoral"/>
    </Window.Resources>

    <Grid Margin="0,0,0,0">
        <Grid.Resources>
            <Style TargetType="Button">
                <Setter Property="Background" Value="Cyan"/>
                <Setter Property="Foreground" Value="Gray"/>
            </Style>
        </Grid.Resources>
        <Button x:Name="button" Content="Hello World" HorizontalAlignment="Left" Margin="30,10,0,0" VerticalAlignment="Top" Width="100" Click="button_Click"/>
        <ListBox FontSize="30" Margin="30,39,302,465">
            <ListBox.Resources>
                <SolidColorBrush x:Key="brush1" Color="Violet"/>
                <Style TargetType="TextBlock">
                    <Setter Property="FontStyle" Value="Italic"/>
                </Style>
            </ListBox.Resources>

            <TextBlock Text="List 1"/>
            <TextBlock Text="List 2" Background="{StaticResource brush1}"/>
            <Button Content="List Button" Click="Button_Click_1"/>
        </ListBox>
        <StackPanel Margin="30,230,302,165">
            <Button Content="Button 2" Background="{StaticResource MyBrush}" Click="Button_Click_2"/>
            <Button Content="Button 3" Click="Button_Click_3"/>
            <Button Content="Button 4" Click="Button_Click_4">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Ellipse Fill="LightBlue" Width="80" Height="30"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <StackPanel>
                <StackPanel.Resources>
                    <!-- x:Key なしのスタイルを定義することで、
                         TargetType で指定した型すべてにスタイルを適用する -->
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="LightBlue" />
                        <Setter Property="Foreground" Value="Red" />
                    </Style>

                    <!-- x:Key の明示 -->
                    <Style x:Key="MyButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="DarkSeaGreen" />
                        <Setter Property="Foreground" Value="LightPink" />
                    </Style>
                    <Style TargetType="TextBox">
                        <Setter Property="Background" Value="LightGray" />

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="LightPink" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <TextBox Text="Text Box"/>

                <!-- スタイルの自動適用 -->
                <Button Content="ボタン1" />
                <!-- x:Key を指定して明示的にスタイルを適用 -->
                <Button Style="{StaticResource MyButtonStyle}" Content="ボタン2" />
                <!-- スタイルを直接記述 -->
                <Button Content="ボタン3">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Gray" />
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </StackPanel>
        <StackPanel Margin="30,410,302,134">
            <StackPanel.Resources>
                <ControlTemplate x:Key="MyButtonTemplate" TargetType="Button">
                    <Ellipse Fill="LightBlue" Width="80" Height="30"/>
                </ControlTemplate>

                <!-- 自動適用スタイル -->
                <Style TargetType="Button">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <Ellipse Fill="{TemplateBinding Background}" />
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                                <!--
                            <Ellipse Fill="LightBlue" Width="80" Height="30"/>
                            -->
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </StackPanel.Resources>

            <Button Height="49">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Ellipse Fill="LightBlue" Width="80" Height="30"/>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Button Template="{StaticResource MyButtonTemplate}" />

            <Button Content="ボタン1" Background="LightBlue" Height="30" />
            <Button Content="ボタン2" Background="LightPink" Height="30" />
        </StackPanel>

        <StackPanel Margin="295,39,10,266" Background="Orange">
            <!-- 階層的なプロパティ指定 -->
            <TextBlock x:Name="text1" Text="{Binding 管理者.姓}"/>

            <!-- インデクサー -->
            <TextBlock Text="{Binding コンテンツ[1].URL}"/>

            <!-- 添付プロパティ -->
            <TextBlock Text="{Binding ElementName=text1, Path=ActualWidth}"/>

            <DataGrid ItemsSource="{Binding Path=コンテンツ}" IsSynchronizedWithCurrentItem="True"/>
            <TextBlock Text="{Binding Path=コンテンツ/タイトル}"/>

            <TextBlock Text="{Binding Source={x:Static Application.Current},
             Path=StartupUri}" />

            <TextBox x:Name="text2" />
            <Slider Value="{Binding ElementName=text2, Path=Text}" RenderTransformOrigin="0.481,3.864" />
            
        </StackPanel>

        <StackPanel xmlns:local="clr-namespace:atmarkit05" Margin="295,429,10,10">

            <StackPanel.Resources>
                <local:DegreeToRadianConverter x:Key="DegToRad"/>
            </StackPanel.Resources>

            <Slider x:Name="slider" Value="0" Minimum="0" Maximum="360" />
            <TextBox Text="{Binding ElementName=slider, Path=Value}" />
            <TextBox Text="{Binding ElementName=slider, Path=Value, Converter={StaticResource DegToRad}}" />

        </StackPanel>

    </Grid>

    <!--
    CLR : 共通言語ランタイム(Common Language Runtime)
    
    -->

</Window>
